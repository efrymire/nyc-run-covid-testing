name: Scrape + Deploy to Netlify

on:
  schedule:
    # https://crontab.guru/#0_1_*_*_*
    - cron: "0 1 * * *"
  push:
    branches: [main, gh-actions]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key:
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit == false }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm ci
      - name: Scrape data
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          NODE_ENV_MAPBOX_ACCESS_TOKEN:
            ${{ secrets.NODE_ENV_MAPBOX_ACCESS_TOKEN }}
        run: npm run scrape
      - name: Build app with Parcel
        env:
          NODE_ENV_MAPBOX_ACCESS_TOKEN:
            ${{ secrets.NODE_ENV_MAPBOX_ACCESS_TOKEN }}
        run: npm run build --if-present
      - name: "Deploy to Netlify"
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./dist"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist
            static/data/**
